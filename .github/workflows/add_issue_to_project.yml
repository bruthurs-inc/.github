name: Map Issue Fields to Project
on:
  issues:
    types: [opened]

jobs:
  update-project-fields:
    runs-on: ubuntu-latest
    steps:
      - name: Extract Issue Fields & Update Project
        env:
          GH_TOKEN: ${{ secrets.PROJECT_PAT }}
        run: |
          ISSUE_BODY="${{ github.event.issue.body }}"

          # Extract values using awk
          PRIORITY=$(echo "$ISSUE_BODY" | awk -v RS='' '/### Priority/ {getline; print}')
          EFFORT=$(echo "$ISSUE_BODY" | awk -v RS='' '/### Level of Effort/ {getline; print}')
          DUE_DATE=$(echo "$ISSUE_BODY" | awk -v RS='' '/### Due Date/ {getline; print}')

          # Debugging Output
          echo "Extracted Priority: $PRIORITY"
          echo "Extracted Effort: $EFFORT"
          echo "Extracted Due Date: $DUE_DATE"
          
          # Fetch project options for priority and effort
          PRIORITY_OPTION_ID=$(gh api graphql -F projectId="PVT_kwDOBfaOE84ATF4c" -f query='
            query($projectId: ID!) {
              node(id: $projectId) {
                ... on ProjectV2 {
                  fields(first: 100) {
                    nodes {
                      id
                      name
                      singleSelectOptions(first: 100) {
                        nodes {
                          id
                          name
                        }
                      }
                    }
                  }
                }
              }
            }' --jq '.data.node.fields.nodes[] | select(.name == "Priority") | .singleSelectOptions.nodes[] | select(.name == "'"$PRIORITY"'") | .id')

          EFFORT_OPTION_ID=$(gh api graphql -F projectId="PVT_kwDOBfaOE84ATF4c" -f query='
            query($projectId: ID!) {
              node(id: $projectId) {
                ... on ProjectV2 {
                  fields(first: 100) {
                    nodes {
                      id
                      name
                      singleSelectOptions(first: 100) {
                        nodes {
                          id
                          name
                        }
                      }
                    }
                  }
                }
              }
            }' --jq '.data.node.fields.nodes[] | select(.name == "Effort") | .singleSelectOptions.nodes[] | select(.name == "'"$EFFORT"'") | .id')

          # Convert Due Date to ISO 8601 format
          DUE_DATE_ISO=$(date -d "$DUE_DATE" --iso-8601=seconds)

          # Debug Output
          echo "Priority Option ID: $PRIORITY_OPTION_ID"
          echo "Effort Option ID: $EFFORT_OPTION_ID"
          echo "Due Date (ISO): $DUE_DATE_ISO"

          # Check if required values are empty
          if [[ -z "$PRIORITY_OPTION_ID" || -z "$EFFORT_OPTION_ID" || -z "$DUE_DATE_ISO" ]]; then
            echo "Error: One or more required values are empty."
            exit 1
          fi

          # Update the project fields
          gh api graphql -F itemId="$ITEM_ID" -F projectId="PVT_kwDOBfaOE84ATF4c" -f query='
            mutation ($itemId: ID!, $projectId: ID!) {
              updatePriority: updateProjectV2ItemFieldValue(
                input: {
                  projectId: $projectId,
                  itemId: $itemId,
                  fieldId: "PVTSSF_lADOBfaOE84ATF4czgpFJPM",
                  value: { singleSelectOptionId: "'"$PRIORITY_OPTION_ID"'" }
                }
              ) { clientMutationId }

              updateEffort: updateProjectV2ItemFieldValue(
                input: {
                  projectId: $projectId,
                  itemId: $itemId,
                  fieldId: "PVTSSF_lADOBfaOE84ATF4czgpFJSo",
                  value: { singleSelectOptionId: "'"$EFFORT_OPTION_ID"'" }
                }
              ) { clientMutationId }

              updateDueDate: updateProjectV2ItemFieldValue(
                input: {
                  projectId: $projectId,
                  itemId: $itemId,
                  fieldId: "PVTF_lADOBfaOE84ATF4czgpFJGw",
                  value: { date: "'"$DUE_DATE_ISO"'" }
                }
              ) { clientMutationId }
            }'
