name: Map Issue Fields to Project
on:
  issues:
    types: [opened]

jobs:
  update-project-fields:
    runs-on: ubuntu-latest
    steps:
      - name: Extract Issue Fields & Update Project
        env:
          GH_TOKEN: ${{ secrets.PROJECT_PAT }}
        run: |
          set -e  # Exit immediately if a command fails

          echo "Extracting issue fields..."
          ISSUE_BODY="${{ github.event.issue.body }}"
          PRIORITY=$(echo "$ISSUE_BODY" | awk -v RS='' '/### Priority/ {getline; print}' | xargs)
          EFFORT=$(echo "$ISSUE_BODY" | awk -v RS='' '/### Level of Effort/ {getline; print}' | xargs)
          DUE_DATE=$(echo "$ISSUE_BODY" | awk -v RS='' '/### Due Date/ {getline; print}')

          echo "Extracted Priority: '$PRIORITY'"
          echo "Extracted Effort: '$EFFORT'"
          echo "Extracted Due Date: '$DUE_DATE'"

          echo "Fetching project fields..."
          PROJECT_FIELDS=$(gh api graphql -F projectId="PVT_kwDOBfaOE84ATF4c" -f query='
          query($projectId: ID!) {
            node(id: $projectId) {
              ... on ProjectV2 {
                fields(first: 100) {
                  nodes {
                    __typename
                    id
                    name
                    ... on ProjectV2SingleSelectField {
                      options {
                        id
                        name
                      }
                    }
                    ... on ProjectV2IterationField {
                      configuration {
                        iterations {
                          id
                          title
                        }
                      }
                    }
                    ... on ProjectV2Field {
                      dataType
                    }
                    ... on ProjectV2TextField {
                      id
                    }
                    ... on ProjectV2DateField {
                      id
                    }
                    ... on ProjectV2NumberField {
                      id
                    }
                  }
                }
              }
            }
          }')

          echo "$PROJECT_FIELDS" | jq .

          PRIORITY_OPTION_ID=$(echo "$PROJECT_FIELDS" | jq -r --arg priority "$PRIORITY" '
            .data.node.fields.nodes[] | select(.name == "Priority") | .options[] |
            select(.name == $priority) | .id')

          EFFORT_OPTION_ID=$(echo "$PROJECT_FIELDS" | jq -r --arg effort "$EFFORT" '
            .data.node.fields.nodes[] | select(.name == "Level of Effort") | .options[] |
            select(.name == $effort) | .id')

          echo "Priority Option ID: '$PRIORITY_OPTION_ID'"
          echo "Effort Option ID: '$EFFORT_OPTION_ID'"

          if [[ -n "$DUE_DATE" ]]; then
            DUE_DATE_ISO=$(date -d "$DUE_DATE" --iso-8601=seconds || echo "")
          else
            DUE_DATE_ISO=""
          fi

          echo "Due Date (ISO): '$DUE_DATE_ISO'"

          ISSUE_NODE_ID="${{ github.event.issue.node_id }}"
          echo "Issue Node ID: '$ISSUE_NODE_ID'"
          ITEM_ID=$(gh api graphql -F projectId="PVT_kwDOBfaOE84ATF4c" -F issueNodeId="$ISSUE_NODE_ID" -f query='
            query($projectId: ID!, $issueNodeId: ID!) {
              node(id: $issueNodeId) {
                ... on Issue {
                  projectItems(first: 1) {
                    nodes {
                      id
                    }
                  }
                }
              }
            }' --jq '.data.node.projectItems.nodes[0].id')

          if [[ -z "$ITEM_ID" ]]; then
            echo "Error: Could not retrieve project item ID."
            exit 1
          fi

          echo "Updating project fields..."
          gh api graphql -F itemId="$ITEM_ID" -F projectId="PVT_kwDOBfaOE84ATF4c" -f query='
            mutation ($itemId: ID!, $projectId: ID!) {
              updatePriority: updateProjectV2ItemFieldValue(
                input: {
                  projectId: $projectId,
                  itemId: $itemId,
                  fieldId: "PVTSSF_lADOBfaOE84ATF4czgpFJPM",
                  value: { singleSelectOptionId: "'$PRIORITY_OPTION_ID'" }
                }
              ) { clientMutationId }

              updateEffort: updateProjectV2ItemFieldValue(
                input: {
                  projectId: $projectId,
                  itemId: $itemId,
                  fieldId: "PVTSSF_lADOBfaOE84ATF4czgpFJSo",
                  value: { singleSelectOptionId: "'$EFFORT_OPTION_ID'" }
                }
              ) { clientMutationId }

              updateDueDate: updateProjectV2ItemFieldValue(
                input: {
                  projectId: $projectId,
                  itemId: $itemId,
                  fieldId: "PVTF_lADOBfaOE84ATF4czgpFJGw",
                  value: { date: "'$DUE_DATE_ISO'" }
                }
              ) { clientMutationId }
            }'
